@import "tab/Tabs.styl"
@import "scroll/Scroll-area.styl"
@import "dropdown/Dropdown.styl"
@import "dropdown/Button-dropdown.styl"
@import "field/Validable-field.styl"
@import "field/Validable-suffix.styl"
@import "switcher/Switcher.styl"
@import "loader/Loader.styl"
@import "table/Table.styl"
@import "table/Filterable-table.styl"
@import "confirm/Confirm.styl"
@import "confirm/Modal.styl"
@import "utils/Required-label.styl"
@import "filter/Filter-list.styl"
@import "filter/Filter.styl"
@import "textmenu/Text-menu.styl"
@import "textmenu/Text-menu-btn.styl"
@import "datepicker/style/*"


Offset_create($top = 0, $right = 0, $bottom = 0, $left = 0){
  $return = {top: $top, right: $right, bottom: $bottom, left: $left, "_type": "Offset"}
}
Offset_typeOf($offset){
  if $offset['_type'] == null || $offset['_type'] != 'Offset'{
    error(join(' ', $offset 'is not of type Offset'))
  }
}

animate($animationName = null, $duration = 0s, $timingFunction = ease, $delay = 0s, $iterationCount = 1, $direction = normal, $fillMode = forwards, $playState = running){
  vendors = official;

  if $animationName == null {
    $animationCount = lookup('$_animationCount')
    if $animationCount == null {
      $animationCount = 0;
    }
    $animationName = 'anim' + $animationCount
    define('$_animationCount', $animationCount + 1, true)
  }
  animation: $duration $timingFunction $delay $iterationCount $direction $fillMode $playState unquote($animationName);
  @keyframes {$animationName}{
    {block}
  }

}

rem($value) {
  if ($value is 'auto' || $value is 'inherit') {
    return $value;
  }

  $u = unit($value);

  if ($u is 'px') {
    return unit($value / 16, 'rem');
  }else {
    return unit($value, $u);
  }
}